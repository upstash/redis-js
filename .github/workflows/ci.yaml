name: Test
on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: ["14", "16", "17"]
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: true

      - name: Verify formatting
        run: pnpm prettier --check .

      - name: Run linter
        run: pnpm eslint --ext .ts .

      - name: Build
        run: pnpm build

      - name: Start redis server
        uses: ./.github/actions/redis
        with:
          UPSTASH_REDIS_REST_URL: http://127.0.0.1:6379
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_AUTH_TOKEN }}
          UPSTASH_REPO_ACCESS_TOKEN: ${{ secrets.UPSTASH_REPO_ACCESS_TOKEN }}
          REDIS_SERVER_CONFIG: ${{ secrets.REDIS_SERVER_CONFIG }}

      - name: Run tests
        run: pnpm test ./pkg
        env:
          UPSTASH_REDIS_REST_URL: http://127.0.0.1:6379
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_AUTH_TOKEN }}

  example-nextjs:
    needs:
      - test
    env:
      UPSTASH_REDIS_REST_URL: http://127.0.0.1:6379
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_AUTH_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2
        with:
          version: 6
          run_install: true

      - name: Build
        run: pnpm build

      - name: Start redis server
        uses: ./.github/actions/redis
        with:
          UPSTASH_REDIS_REST_URL: http://127.0.0.1:6379
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_AUTH_TOKEN }}
          UPSTASH_REPO_ACCESS_TOKEN: ${{ secrets.UPSTASH_REPO_ACCESS_TOKEN }}
          REDIS_SERVER_CONFIG: ${{ secrets.REDIS_SERVER_CONFIG }}

      - name: Install example
        run: npm install
        working-directory: ./examples/nextjs

      - name: Build example
        run: npm run build
        working-directory: ./examples/nextjs

      - name: Start example
        run: npm run start &
        working-directory: ./examples/nextjs

      - name: Ping api
        run: |
          count=$(curl -s http://localhost:3000/api/incr | jq -r '.count')
          if [ $count -ne 2 ]; then
            echo "Expected count to be 2, got $count"
            exit 1
          fi

  # example-cloudflare:
  #   # needs:
  #   #   - test
  #   env:
  #     UPSTASH_REDIS_REST_URL: http://127.0.0.1:6379
  #     UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_AUTH_TOKEN }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup repo
  #       uses: actions/checkout@v2
  #     - name: Setup node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14
  #     - name: Cache pnpm modules
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.pnpm-store
  #         key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-

  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 6
  #         run_install: true

  #     - name: Build
  #       run: pnpm build

  #     - name: Start redis server
  #       uses: ./.github/actions/redis
  #       with:
  #         UPSTASH_REDIS_REST_URL: http://127.0.0.1:6379
  #         UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_AUTH_TOKEN }}
  #         UPSTASH_REPO_ACCESS_TOKEN: ${{ secrets.UPSTASH_REPO_ACCESS_TOKEN }}
  #         REDIS_SERVER_CONFIG: ${{ secrets.REDIS_SERVER_CONFIG }}

  #     - name: Install example
  #       run: npm install
  #       working-directory: ./examples/cloudflare-workers

  #     - name: Inject variables
  #       working-directory: ./examples/cloudflare-workers
  #       run: |
  #         sed -i 's;^UPSTASH_REDIS_REST_URL.*";UPSTASH_REDIS_REST_URL = "http://127.0.0.1:6379";' wrangler.toml
  #         sed -i 's;^UPSTASH_REDIS_REST_TOKEN.*";UPSTASH_REDIS_REST_TOKEN = "${{ secrets.UPSTASH_AUTH_TOKEN }}";' wrangler.toml

  #     - name: Start example
  #       run: npx @cloudflare/wrangler dev &
  #       working-directory: ./examples/cloudflare-workers

  #     - run: while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8787)" != "200" ]]; do sleep 1; done
  #       timeout-minutes: 2

  #     - name: Ping api
  #       run: |
  #         sleep 10
  #         curl -s http://localhost:8787/ -o response.html
  #         cat response.html
  #         if grep -q "Count: 1"; then
  #           exit 0
  #         else
  #           echo "Expected response to contain 'Count: 1', got $(cat response.html)"
  #           exit 1

  #         fi
